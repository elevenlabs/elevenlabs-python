# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .list_response_meta import ListResponseMeta
from .test_invocation_summary_response_model import TestInvocationSummaryResponseModel


class GetTestInvocationsPageResponseModel(UncheckedBaseModel):
    meta: typing.Optional[ListResponseMeta] = None
    results: typing.List[TestInvocationSummaryResponseModel]
    next_cursor: typing.Optional[str] = pydantic.Field(default=None)
    """
    Cursor for the next page of results
    """

    has_more: bool = pydantic.Field()
    """
    Whether there are more results available
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
