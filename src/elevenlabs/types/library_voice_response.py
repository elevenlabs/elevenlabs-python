# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LibraryVoiceResponse(UncheckedBaseModel):
    public_owner_id: str
    voice_id: str
    date_unix: int
    name: str
    accent: str
    gender: str
    age: str
    descriptive: str
    use_case: str
    category: str
    language: str
    description: str
    preview_url: str
    usage_character_count_1_y: int = pydantic.Field(alias="usage_character_count_1y")
    usage_character_count_7_d: int = pydantic.Field(alias="usage_character_count_7d")
    play_api_usage_character_count_1_y: int = pydantic.Field(alias="play_api_usage_character_count_1y")
    cloned_by_count: int
    rate: float
    free_users_allowed: bool
    live_moderation_enabled: bool
    featured: bool
    notice_period: typing.Optional[int] = None
    instagram_username: typing.Optional[str] = None
    twitter_username: typing.Optional[str] = None
    youtube_username: typing.Optional[str] = None
    tiktok_username: typing.Optional[str] = None
    image_url: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
