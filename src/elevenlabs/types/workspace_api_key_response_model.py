# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .workspace_api_key_response_model_permissions_item import WorkspaceApiKeyResponseModelPermissionsItem


class WorkspaceApiKeyResponseModel(UncheckedBaseModel):
    name: str
    hint: str
    key_id: str
    service_account_user_id: str
    created_at_unix: typing.Optional[int] = None
    is_disabled: typing.Optional[bool] = None
    permissions: typing.Optional[typing.List[WorkspaceApiKeyResponseModelPermissionsItem]] = None
    character_limit: typing.Optional[int] = None
    character_count: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
