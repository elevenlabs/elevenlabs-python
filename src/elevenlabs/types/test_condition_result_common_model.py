# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .evaluation_success_result import EvaluationSuccessResult
from .test_condition_rationale_common_model import TestConditionRationaleCommonModel


class TestConditionResultCommonModel(UncheckedBaseModel):
    result: EvaluationSuccessResult
    rationale: typing.Optional[TestConditionRationaleCommonModel] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
