# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .async_conversation_metadata_delivery_status import AsyncConversationMetadataDeliveryStatus


class AsyncConversationMetadata(UncheckedBaseModel):
    """
    Metadata for async conversation delivery (Zendesk, Slack, etc.).
    """

    delivery_status: AsyncConversationMetadataDeliveryStatus
    delivery_timestamp: int
    delivery_error: typing.Optional[str] = None
    external_system: str
    external_id: str
    retry_count: typing.Optional[int] = None
    last_retry_timestamp: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
