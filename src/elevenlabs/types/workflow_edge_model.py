# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .workflow_edge_model_backward_condition import WorkflowEdgeModelBackwardCondition
from .workflow_edge_model_forward_condition import WorkflowEdgeModelForwardCondition


class WorkflowEdgeModel(UncheckedBaseModel):
    source: str
    target: str
    forward_condition: typing.Optional[WorkflowEdgeModelForwardCondition] = pydantic.Field(default=None)
    """
    Condition that must be met for the edge to be traversed in the forward direction.
    """

    backward_condition: typing.Optional[WorkflowEdgeModelBackwardCondition] = pydantic.Field(default=None)
    """
    Condition that must be met for the edge to be traversed in the backward direction.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .ast_and_operator_node import AstAndOperatorNode  # noqa: E402, F401, I001
from .ast_equals_operator_node import AstEqualsOperatorNode  # noqa: E402, F401, I001
from .ast_greater_than_operator_node import AstGreaterThanOperatorNode  # noqa: E402, F401, I001
from .ast_greater_than_or_equals_operator_node import AstGreaterThanOrEqualsOperatorNode  # noqa: E402, F401, I001
from .ast_less_than_operator_node import AstLessThanOperatorNode  # noqa: E402, F401, I001
from .ast_less_than_or_equals_operator_node import AstLessThanOrEqualsOperatorNode  # noqa: E402, F401, I001
from .ast_not_equals_operator_node import AstNotEqualsOperatorNode  # noqa: E402, F401, I001
from .ast_or_operator_node import AstOrOperatorNode  # noqa: E402, F401, I001

update_forward_refs(WorkflowEdgeModel)
