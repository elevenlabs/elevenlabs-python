# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .voice_sharing_state import VoiceSharingState
from .category import Category
from .review_status import ReviewStatus
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class VoiceSharingResponse(UncheckedBaseModel):
    status: typing.Optional[VoiceSharingState] = None
    history_item_sample_id: typing.Optional[str] = None
    date_unix: typing.Optional[int] = None
    whitelisted_emails: typing.Optional[typing.List[str]] = None
    public_owner_id: typing.Optional[str] = None
    original_voice_id: typing.Optional[str] = None
    financial_rewards_enabled: typing.Optional[bool] = None
    free_users_allowed: typing.Optional[bool] = None
    live_moderation_enabled: typing.Optional[bool] = None
    rate: typing.Optional[float] = None
    notice_period: typing.Optional[int] = None
    disable_at_unix: typing.Optional[int] = None
    voice_mixing_allowed: typing.Optional[bool] = None
    featured: typing.Optional[bool] = None
    category: typing.Optional[Category] = None
    reader_app_enabled: typing.Optional[bool] = None
    image_url: typing.Optional[str] = None
    ban_reason: typing.Optional[str] = None
    liked_by_count: typing.Optional[int] = None
    cloned_by_count: typing.Optional[int] = None
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None
    labels: typing.Optional[typing.Dict[str, str]] = None
    review_status: typing.Optional[ReviewStatus] = None
    review_message: typing.Optional[str] = None
    enabled_in_library: typing.Optional[bool] = None
    instagram_username: typing.Optional[str] = None
    twitter_username: typing.Optional[str] = None
    youtube_username: typing.Optional[str] = None
    tiktok_username: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
