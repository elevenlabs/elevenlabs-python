# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel, UnionMetadata


class UnitTestToolCallParameterEval_Exact(UncheckedBaseModel):
    type: typing.Literal["exact"] = "exact"
    expected_value: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class UnitTestToolCallParameterEval_Llm(UncheckedBaseModel):
    type: typing.Literal["llm"] = "llm"
    description: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class UnitTestToolCallParameterEval_Regex(UncheckedBaseModel):
    type: typing.Literal["regex"] = "regex"
    pattern: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


UnitTestToolCallParameterEval = typing_extensions.Annotated[
    typing.Union[
        UnitTestToolCallParameterEval_Exact, UnitTestToolCallParameterEval_Llm, UnitTestToolCallParameterEval_Regex
    ],
    UnionMetadata(discriminant="type"),
]
