# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel, UnionMetadata
from .whats_app_calls import WhatsAppCalls


class WhatsAppBusinessAccountChangesItem_Calls(UncheckedBaseModel):
    field: typing.Literal["calls"] = "calls"
    value: WhatsAppCalls

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class WhatsAppBusinessAccountChangesItem_Messages(UncheckedBaseModel):
    field: typing.Literal["messages"] = "messages"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


WhatsAppBusinessAccountChangesItem = typing_extensions.Annotated[
    typing.Union[WhatsAppBusinessAccountChangesItem_Calls, WhatsAppBusinessAccountChangesItem_Messages],
    UnionMetadata(discriminant="field"),
]
