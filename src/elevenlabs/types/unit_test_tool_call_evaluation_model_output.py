# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .referenced_tool_common_model import ReferencedToolCommonModel
from .unit_test_tool_call_parameter import UnitTestToolCallParameter


class UnitTestToolCallEvaluationModelOutput(UncheckedBaseModel):
    parameters: typing.Optional[typing.List[UnitTestToolCallParameter]] = pydantic.Field(default=None)
    """
    Parameters to evaluate for the agent's tool call. If empty, the tool call parameters are not evaluated.
    """

    referenced_tool: ReferencedToolCommonModel = pydantic.Field()
    """
    The tool to evaluate a call against.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
