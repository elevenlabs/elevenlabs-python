# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel, UnionMetadata


class ConversationHistoryMetadataCommonModelInitiationTrigger_Default(UncheckedBaseModel):
    trigger_type: typing.Literal["default"] = "default"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ConversationHistoryMetadataCommonModelInitiationTrigger_Zendesk(UncheckedBaseModel):
    trigger_type: typing.Literal["zendesk"] = "zendesk"
    ticket_id: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


ConversationHistoryMetadataCommonModelInitiationTrigger = typing_extensions.Annotated[
    typing.Union[
        ConversationHistoryMetadataCommonModelInitiationTrigger_Default,
        ConversationHistoryMetadataCommonModelInitiationTrigger_Zendesk,
    ],
    UnionMetadata(discriminant="trigger_type"),
]
