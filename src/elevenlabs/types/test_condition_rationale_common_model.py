# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class TestConditionRationaleCommonModel(UncheckedBaseModel):
    """
    Structured rationale for test condition results containing individual failure/success reasons.
    """

    messages: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    List of individual parameter evaluation messages or reasons
    """

    summary: typing.Optional[str] = pydantic.Field(default=None)
    """
    High-level summary of the evaluation result
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
