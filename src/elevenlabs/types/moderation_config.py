# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .threshold_guardrail import ThresholdGuardrail


class ModerationConfig(UncheckedBaseModel):
    sexual: typing.Optional[ThresholdGuardrail] = None
    violence: typing.Optional[ThresholdGuardrail] = None
    violence_graphic: typing.Optional[ThresholdGuardrail] = None
    harassment: typing.Optional[ThresholdGuardrail] = None
    harassment_threatening: typing.Optional[ThresholdGuardrail] = None
    hate: typing.Optional[ThresholdGuardrail] = None
    hate_threatening: typing.Optional[ThresholdGuardrail] = None
    self_harm_instructions: typing.Optional[ThresholdGuardrail] = None
    self_harm: typing.Optional[ThresholdGuardrail] = None
    self_harm_intent: typing.Optional[ThresholdGuardrail] = None
    sexual_minors: typing.Optional[ThresholdGuardrail] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
