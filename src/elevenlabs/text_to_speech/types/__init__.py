# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .body_text_to_speech_streaming_v_1_text_to_speech_voice_id_stream_post_apply_text_normalization import (
        BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization,
    )
    from .body_text_to_speech_streaming_with_timestamps_v_1_text_to_speech_voice_id_stream_with_timestamps_post_apply_text_normalization import (
        BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization,
    )
    from .body_text_to_speech_v_1_text_to_speech_voice_id_post_apply_text_normalization import (
        BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization,
    )
    from .body_text_to_speech_with_timestamps_v_1_text_to_speech_voice_id_with_timestamps_post_apply_text_normalization import (
        BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization,
    )
    from .text_to_speech_convert_request_output_format import TextToSpeechConvertRequestOutputFormat
    from .text_to_speech_convert_with_timestamps_request_output_format import (
        TextToSpeechConvertWithTimestampsRequestOutputFormat,
    )
    from .text_to_speech_stream_request_output_format import TextToSpeechStreamRequestOutputFormat
    from .text_to_speech_stream_with_timestamps_request_output_format import (
        TextToSpeechStreamWithTimestampsRequestOutputFormat,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization": ".body_text_to_speech_streaming_v_1_text_to_speech_voice_id_stream_post_apply_text_normalization",
    "BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization": ".body_text_to_speech_streaming_with_timestamps_v_1_text_to_speech_voice_id_stream_with_timestamps_post_apply_text_normalization",
    "BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization": ".body_text_to_speech_v_1_text_to_speech_voice_id_post_apply_text_normalization",
    "BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization": ".body_text_to_speech_with_timestamps_v_1_text_to_speech_voice_id_with_timestamps_post_apply_text_normalization",
    "TextToSpeechConvertRequestOutputFormat": ".text_to_speech_convert_request_output_format",
    "TextToSpeechConvertWithTimestampsRequestOutputFormat": ".text_to_speech_convert_with_timestamps_request_output_format",
    "TextToSpeechStreamRequestOutputFormat": ".text_to_speech_stream_request_output_format",
    "TextToSpeechStreamWithTimestampsRequestOutputFormat": ".text_to_speech_stream_with_timestamps_request_output_format",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization",
    "BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization",
    "BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization",
    "BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization",
    "TextToSpeechConvertRequestOutputFormat",
    "TextToSpeechConvertWithTimestampsRequestOutputFormat",
    "TextToSpeechStreamRequestOutputFormat",
    "TextToSpeechStreamWithTimestampsRequestOutputFormat",
]
