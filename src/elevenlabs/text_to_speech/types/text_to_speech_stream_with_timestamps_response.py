# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
import pydantic
from .text_to_speech_stream_with_timestamps_response_alignment import TextToSpeechStreamWithTimestampsResponseAlignment
from .text_to_speech_stream_with_timestamps_response_normalized_alignment import (
    TextToSpeechStreamWithTimestampsResponseNormalizedAlignment,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class TextToSpeechStreamWithTimestampsResponse(UncheckedBaseModel):
    audio_base_64: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="audio_base64")] = (
        pydantic.Field(default=None)
    )
    """
    Base64 encoded audio chunk
    """

    alignment: typing.Optional[TextToSpeechStreamWithTimestampsResponseAlignment] = None
    normalized_alignment: typing.Optional[TextToSpeechStreamWithTimestampsResponseNormalizedAlignment] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
